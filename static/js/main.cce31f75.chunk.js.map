{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","images/trash.svg","components/UserCard/UserCard.js","components/SearchForm/SearchForm.js","components/SearchList/SearchList.js","components/Favourites/Favourites.js","components/Preloader/Preloader.js","components/Main/Main.js","utils/Api.js","utils/utils.js","components/App/App.js","index.js"],"names":["Header","className","Footer","UserCard","index","picture","name","registered","email","handleFavourite","isFavouriteDOM","handleDeleteFavourite","user","draggable","onDragStart","e","target","closest","document","querySelector","style","background","opacity","border","visibility","transition","dragStartHandler","onDragEnd","dragEndHandler","onDragOver","preventDefault","dragOverHandler","src","large","alt","Date","date","toLocaleString","month","day","year","delIcon","onClick","SearchForm","userSearch","React","useState","text","setText","type","value","placeholder","onChange","SearchList","sortUsers","isLoaded","searchResults","handleClickOpen","classList","toggle","Object","entries","map","item","length","props","Favourites","favourite","favourites","setFavourites","currentUser","setCurrentUser","filter","f","onDrop","some","dragDropUl","dragOverUl","onDragLeave","boxShadow","p","dragDropHandler","Preloader","isLoadError","isLoading","sectionPreloaderVisible","circleVisible","containerVisible","Main","fetch","method","headers","then","res","json","results","reNewUsersCategories","usersCategories","items","users","forEach","age","push","App","setSortUsers","setIsLoaded","usersClone","setUsersClone","setFavourite","setIsLoading","setIsLoadError","useEffect","Api","sort","a","b","first","last","utils","catch","err","console","log","finally","tempArr","Array","values","filterUsers","i","toLowerCase","includes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cce31f75.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className='header'>\r\n            <h1 className='header__head'>JustAI Test Task</h1>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className='footer'>\r\n            <p className='footer__text'>©2021 JustAI Test Task</p>\r\n        </footer>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/trash.4664d724.svg\";","import React from 'react';\r\n\r\nimport delIcon from '../../images/trash.svg';\r\n\r\nexport default function UserCard({ index, picture, name, registered, email, handleFavourite, isFavouriteDOM, handleDeleteFavourite }) {\r\n\r\n    // В данном компоненте реализовано отображение карточки пользователя,\r\n    // а также DnD механика перемещения из поля поиска в поле \"Избранное\"\r\n    // Для перемещения добавлены эффекты анимации \"броска\"\r\n\r\n    const user = [{ picture, name, registered, email }];\r\n\r\n    const dragStartHandler = (e, user) => {\r\n        if (e.target.closest('.main__search-list')) {\r\n            handleFavourite(user);\r\n            document.querySelector('.main__favourites-list').style.background = 'steelblue';\r\n            document.querySelector('.main__favourites-list').style.opacity = '.6';\r\n            e.target.style.border = '2px solid steelblue';\r\n            document.querySelector('.main__favourites-list_overlay').style.visibility = 'hidden';\r\n            document.querySelector('.main__favourites-list_overlay').style.opacity = '0';\r\n            document.querySelector('.main__favourites-list_overlay').style.transition = 'all .2s linear';\r\n        }\r\n    };\r\n\r\n    const dragEndHandler = (e) => {\r\n        if (e.target.closest('.main__search-list')) {\r\n            document.querySelector('.main__favourites-list').style.background = 'white';\r\n            document.querySelector('.main__favourites-list').style.opacity = '1';\r\n            e.target.style.border = '1px solid steelblue';\r\n            document.querySelector('.main__favourites-list_overlay').style.visibility = 'visible';\r\n            document.querySelector('.main__favourites-list_overlay').style.opacity = '1';\r\n            document.querySelector('.main__favourites-list_overlay').style.transition = 'all .2s linear';\r\n        }\r\n    };\r\n\r\n    const dragOverHandler = e => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className='user-card'\r\n            draggable={true}\r\n            onDragStart={e => dragStartHandler(e, user)}\r\n            onDragEnd={e => dragEndHandler(e)}\r\n            onDragOver={e => dragOverHandler(e)}\r\n        >\r\n            <img className='user-card__img' src={picture.large} alt='User img' />\r\n            <div className='user-card__data'>\r\n                <p className='user-card__text'>{name}</p>\r\n                <p className='user-card__text'>\r\n                    register data: {new Date(registered.date).toLocaleString('en', { month: 'long', day: 'numeric', year: 'numeric' })}\r\n                </p>\r\n                <p className='user-card__text'>{email}</p>\r\n            </div>\r\n            {isFavouriteDOM && <img src={delIcon} alt='delete' className='user-card__delete-icon' onClick={e => handleDeleteFavourite(e, name)} />}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function SearchForm({ userSearch }) {\r\n    // Компонент поиска пользователей в списке\r\n    // Используется метод userSearch из App.js \r\n    // Для передачи значения инпута используется управляемый компонент \r\n    const [text, setText] = React.useState('');\r\n\r\n    const handleChange = e => {\r\n        const value = e.target.value;\r\n        e.target.name === 'input' && setText(value);\r\n        userSearch(value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input type='text' name='input' value={text || ''} placeholder='Search field' className='main__search-input' onChange={handleChange} />\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport UserCard from '../UserCard/UserCard';\r\nimport SearchForm from '../SearchForm/SearchForm';\r\n\r\nexport default function SearchList({ sortUsers, isLoaded, userSearch, searchResults, handleFavourite }) {\r\n\r\n    // Метод открытия/закрытия вкладки группы пользователей\r\n    const handleClickOpen = e => {\r\n        e.target.closest('.main__search-list-user-type').querySelector('.main__search-list-type-users').classList.toggle('main__search-list-type-users_close');\r\n    };\r\n\r\n    return (\r\n        <div className='main__search-list'>\r\n            <h3 className='main__search-list-head'>Search user</h3>\r\n            <SearchForm userSearch={userSearch} searchResults={searchResults} sortUsers={sortUsers} />\r\n            <div className='main__search-list-users'>\r\n\r\n                {/*  \r\n                    После загрузки юзеров, отсортированные данные заполняютя окно поиска пользоваталей, группируясь по соответствующим вкладкам \r\n                    Категории, в которых отсутствуют данные скрыты\r\n                */}\r\n                {\r\n                    isLoaded &&\r\n                    Object.entries(sortUsers).map((item, index) =>\r\n                        <div className={`main__search-list-user-type ${item[1].length < 1 && 'main__search-list-user-type_disabled'}`} key={index}>\r\n                            <div className='main__search-list-user-type-head' onClick={handleClickOpen}>\r\n                                <p className='main__search-list-user-type-name'>{item[0]}</p><span className='main__search-list-user-type-arrow'>&#8693;</span>\r\n                            </div>\r\n\r\n                            <ul className='main__search-list-type-users'>\r\n                                {\r\n\r\n                                    item[1].map(({ ...props }, index) =>\r\n                                        <UserCard\r\n                                            key={index}\r\n                                            index={index}\r\n                                            picture={props.picture}\r\n                                            name={props.name}\r\n                                            registered={props.registered}\r\n                                            email={props.email}\r\n                                            handleFavourite={handleFavourite}\r\n                                        />\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport UserCard from '../UserCard/UserCard';\r\n\r\nexport default function Favourites({ favourite }) {\r\n    // Компонент, отвечающий за отображение содержимого поля \"Избранное\"\r\n    //Реализовано DnD вертикальное перемещение между карточками  \r\n\r\n    const isFavouriteDOM = true;\r\n    const [favourites, setFavourites] = React.useState([]);\r\n    const [currentUser, setCurrentUser] = React.useState(null);\r\n\r\n    const dragOverHandler = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const dragLeaveHandler = (e) => {\r\n    };\r\n\r\n    const dragStartHandler = (e, item) => {\r\n        setCurrentUser(item);\r\n    };\r\n\r\n    const dragEndHandler = (e) => {\r\n        e.target.style.boxShadow = 'none';\r\n    };\r\n\r\n    const dragDropHandler = (e, item) => {\r\n        e.preventDefault();\r\n        if (!e.target.closest('.main__search-list')) {\r\n            setFavourites(favourites.map((p) => {\r\n                if (p === item) return currentUser;\r\n                if (p === currentUser) return item;\r\n                return p;\r\n            }));\r\n            e.target.style.boxShadow = 'none';\r\n        }\r\n    };\r\n\r\n    const dragDropUl = (e) => {\r\n        e.preventDefault();\r\n        favourite.map(f => {\r\n            if (favourites.some(user => user.name === f.name)) return;\r\n            setFavourites([...favourites, f]);\r\n        });\r\n    };\r\n\r\n    const dragOverUl = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    // Метод удаления карточки из списка \r\n    const handleDeleteFavourite = (e, name) => {\r\n        setFavourites(favourites.filter(f => f.name !== name));\r\n    };\r\n\r\n    return (\r\n        <div className='main__favourites'>\r\n            <h3 className='main__favourites-head'>Favourites</h3>\r\n            <ul\r\n                className='main__favourites-list'\r\n                draggable={true}\r\n                onDrop={e => dragDropUl(e)}\r\n                onDragOver={e => dragOverUl(e)}\r\n            >\r\n                <div className='main__favourites-list_overlay'>\r\n                    {\r\n                        favourites.map((item, index) =>\r\n                            <li\r\n                                key={index}\r\n                                className='main__favourites-list-item'\r\n                                draggable={true}\r\n                                onDragOver={e => dragOverHandler(e)}\r\n                                onDragLeave={e => dragLeaveHandler(e)}\r\n                                onDragStart={e => dragStartHandler(e, item)}\r\n                                onDragEnd={e => dragEndHandler(e)}\r\n                                onDrop={e => dragDropHandler(e, item)}\r\n                            >\r\n                                <UserCard\r\n                                    key={index}\r\n                                    index={index}\r\n                                    picture={item.picture}\r\n                                    name={item.name}\r\n                                    registered={item.registered}\r\n                                    email={item.email}\r\n                                    isFavouriteDOM={isFavouriteDOM}\r\n                                    handleDeleteFavourite={handleDeleteFavourite}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    }\r\n                </div>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Preloader({ isLoadError, isLoading }) {\r\n    const sectionPreloaderVisible = (!isLoadError && !isLoading) && 'preloader__visible';\r\n    const circleVisible = !isLoading && 'preloader__visible';\r\n    const containerVisible = !isLoadError && 'preloader__visible';\r\n    const containerText = 'Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз';\r\n    return (\r\n        <section className={`preloader ${sectionPreloaderVisible}`}>\r\n            <i className={`circle-preloader ${circleVisible}`} />\r\n            <div className={`preloader__container ${containerVisible}`}>\r\n                <p className='preloader__text'>{containerText}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport SearchList from '../SearchList/SearchList';\r\nimport Favourites from '../Favourites/Favourites';\r\nimport Preloader from '../Preloader/Preloader';\r\n\r\nexport default function Main({ sortUsers, isLoaded, userSearch, searchResults, handleFavourite, favourite, isLoadError, isLoading }) {\r\n    return (\r\n        <main className='main'>\r\n            <h2 className='main__head'>Users List</h2>\r\n            <div className='main__container'>\r\n\r\n                {/* Пока данные не загружены с сервера в окне списка пользоваталей будет отображаться спинер загрузки */}\r\n                {\r\n                    isLoaded ? <SearchList\r\n                        sortUsers={sortUsers}\r\n                        isLoaded={isLoaded}\r\n                        userSearch={userSearch}\r\n                        searchResults={searchResults}\r\n                        handleFavourite={handleFavourite}\r\n                    /> : <Preloader isLoading={isLoading} isLoadError={isLoadError} />\r\n                }\r\n\r\n                <div className='main__hr' />\r\n\r\n                <Favourites favourite={favourite} />\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}","const BASE_URL = 'https://randomuser.me/api/?results=1000';\r\n\r\nconst getUsers = () => {\r\n    return fetch(`${BASE_URL}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-type' : 'application/json'\r\n        }\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n        return res.results;\r\n    })\r\n};\r\n\r\nexport default { getUsers };","// Здесь хранятся методы заполнения и очистки шаблона для отсортированного списка пользователей\r\n\r\nconst fillUsersCategories = (users) => {\r\n    const usersCategories = { '1-10': [], '11-20': [], '21-30': [], '31-40': [], '41-50': [], '51-60': [], '61-70': [], '71-80': [], '81-90': [], '91-100': [] };\r\n    reNewUsersCategories(usersCategories);\r\n    users.forEach(user => {\r\n        if (user.registered.age >= 0 && user.registered.age <= 10) usersCategories['1-10'].push(user);\r\n        if (user.registered.age >= 11 && user.registered.age <= 20) usersCategories['11-20'].push(user);\r\n        if (user.registered.age >= 21 && user.registered.age <= 30) usersCategories['21-30'].push(user);\r\n        if (user.registered.age >= 31 && user.registered.age <= 40) usersCategories['31-40'].push(user);\r\n        if (user.registered.age >= 41 && user.registered.age <= 50) usersCategories['41-50'].push(user);\r\n        if (user.registered.age >= 51 && user.registered.age <= 60) usersCategories['51-60'].push(user);\r\n        if (user.registered.age >= 61 && user.registered.age <= 70) usersCategories['61-70'].push(user);\r\n        if (user.registered.age >= 71 && user.registered.age <= 80) usersCategories['71-80'].push(user);\r\n        if (user.registered.age >= 81 && user.registered.age <= 90) usersCategories['81-90'].push(user);\r\n        if (user.registered.age >= 91 && user.registered.age <= 100) usersCategories['91-100'].push(user);\r\n    });\r\n\r\n    return usersCategories;\r\n};\r\n\r\nconst reNewUsersCategories = (usersCategories) => {\r\n    const emptyObj = Object.entries(usersCategories).map(items => {\r\n        items[1] = [];\r\n    });\r\n\r\n    return emptyObj;\r\n};\r\n\r\nexport default { fillUsersCategories, reNewUsersCategories };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // e.target.closest('.main__search-list-user-type').classList.toggle('main__search-list-user-type_close');\r\n        // e.target.closest('.main__search-list-user-type').nextElementSibling && e.target.closest('.main__search-list-user-type').nextElementSibling.classList.toggle('main__search-list-user-type_up');","import React from 'react';\n\nimport './App.css';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Main from '../Main/Main';\nimport Api from '../../utils/Api';\nimport utils from '../../utils/utils';\n\nfunction App() {\n\n  // Стейт переменные для хранения списка юзеров, состояний загрузки и найденных пользователей\n  const [sortUsers, setSortUsers] = React.useState([]);\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [usersClone, setUsersClone] = React.useState([]);\n  const [favourite, setFavourite] = React.useState(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isLoadError, setIsLoadError] = React.useState(false);\n\n  // Загрузка данных с сервера\n  React.useEffect(() => {\n    setIsLoaded(false);\n    setIsLoading(true);\n    Api.getUsers()\n      .then(users => {\n        users.sort((a, b) => {\n          return a.registered.age - b.registered.age;\n        });\n        users.map(user => {\n          user.name = user.name.first + ' ' + user.name.last;\n        });\n        setSortUsers(utils.fillUsersCategories(users));\n        setUsersClone(utils.fillUsersCategories(users));\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoadError(true);\n      })\n      .finally(() => {\n        setIsLoaded(true);\n        setIsLoading(false);\n      });\n  }, []);\n\n  // Метод поиска пользователей в отсортированном списке\n  const userSearch = value => {\n    setSortUsers(usersClone);\n\n    let tempArr = new Array();\n\n    Object.values(usersClone).map(items => {\n      Object.values(items).map(item => {\n        tempArr.push(item);\n      });\n    });\n\n    const filterUsers = tempArr.filter(i => {\n      return i.name.toLowerCase().includes(value);\n    });\n\n    setSortUsers(utils.fillUsersCategories(filterUsers));\n  };\n\n  // Метод сохранения карточки юзера в переменную состояния \"Избранное\"\n  const handleFavourite = (item) => {\n    setFavourite(item);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main\n        sortUsers={sortUsers}\n        isLoaded={isLoaded}\n        userSearch={userSearch}\n        searchResults={searchResults}\n        handleFavourite={handleFavourite}\n        favourite={favourite}\n        isLoadError={isLoadError}\n        isLoading={isLoading}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}